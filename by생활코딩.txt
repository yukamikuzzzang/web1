201220
*코딩과 HTML
어떤 것이 사람이 하는 부분이고(원인)
어떤 것이 기계가 하는 부분인지(결과)

부호-code
원천-source
약속/언어-language

응용 프로그램/앱-Application,App
Program
Webpage
Website

>원인을 통해서 결과를 만들어내는 것! 코딩

웹페이지를 만드는 코드:HTML;HyperText Markup Language

1.가장 쉬운 코드
2.가장 중요한 코드

PUBLIC DOMAIN;저작권 없는 웹 페이지

*HTML 코딩 실습 환경 준비
웹페이지 : 웹 브라우저 + 편집 프로그램;Editor

[HTML Editor]
[best HTML Editor 2020]
(최신 editor 검색)

웹 브라우저와 같은 컴퓨터에 있는 파일을 읽으려한다면?
파일열기를 이용하시면 된다.

윈도우:Ctrl + O
Mac:Cmd + O

*기본문법-태그
이 웹페이지를 남의 문제가 아닌 나의 문제라고 상상해주세요.
자신의 삶에 중요한 정보들..

그저 붙였는데..
중요한 정보를 강조하고 싶어..!
넘쳐흐르는 불만족..

밑줄:underline(u)
(누군가들의 수많은 삽질로 탄생한 밑줄..!)

<strong>CONTENTS</strong> : TAG
(옷에 붙은 태그: 옷에 대해 설명하는 것)
(CONTENTS가 중요하다는 것을 표시)
(일상적인 것에대해 비유적으로 사용하는 것이 더 유용)

#컴퓨터 용어 중 이해하기 어려운 것들이 있다면 사전을 펼치라!
컴퓨터 공학: 하나의 거대한 시!(비유/은유)
논리를 기반으로 하기 때문

한글이 깨진다면 <meta charset="utf-8">추가
웹브라우저에게 UTF-8로 페이지를 열라고 명령하는 것

*혁명적인 변화
쉬운것은 사소하다?!
시험: 누가 얼마나 열심히 공부했는지를 구분
>>틀릴만한 것을 낸다.

어려운 것: 중요
쉬운 것: 중요하지 않음?!
=>꼭 그런 것은 아니다.

태그를 배우기 전과 태그를 배운 후로 나뉘게 될 것

모르는 것이 나오면 불쾌해하는 인류
그것을 해소하는 방향으로 노력하는 것: 문명?!

h1 <- 태그?!
이 사실 자체가 중요
[무엇을 모르는 지를 아는 상태]

h1이 무엇인가?
Definition and Usage 보다 예제가 더 중요!

줄바꿈이 되는 구나
글씨가 일반 글씨보단 크구나..

headings : 제목
<!> h1은 제목을 나타내는 태그 였구나..!

놀라운 시대를 사는 것을 낯설게 바라보자
웹이 없었으면 검색엔진이 존재하지 않았을 것
h1태그를 알기 위해 도서관에서 책을 찾으며
h1이 어떤 태그인지 찾고 올 것..
정보를 머릿속에 우겨넣을 것..
하지만 지금은 그럴 필요가 없으니 알아내는 데 1분도 채 걸리지 않으니
머릿속에 있는 걸 꺼내는데도 1분이상이 걸리니
사실상 아는 것과 다름 없는 상태?!

태그가 무엇인지?
기초를 알고 있어도 충분히 알 수 있다.
우리의 시작이 빠른 속도로 대단해지고 있다..!

*통계에 기반한 학습
150+의 태그
태그가 무엇인지 안다면 무엇인지 알 필요가 없지만..
배우지 않으면 어려운 태그들도 있음..
밑천으로써 가지면 괜찮은 태그들

https://www.advancedwebranking.com/html/

최초의 웹에 사용했던 18개의 태그 중 몇 개는 사라진 상태..
(중국어 공부 중 썼던 것: Frequency of Chinese word)

통계를 기반으로 공부 방향을 스스로 설정하라.
또 가야 할 길 보다
거쳐온 길을 보며
자기에게 유리하게 상황을 해석했음 좋겠다.
나만큼은 내 편이 되어야지.

*줄바꿈:br vs p

br: 줄바꿈 자체에 의미(설명할 필요 없음)닫는 태그가 없음
p: 내가 선택한 이만큼이 단락임을 의미로써 표현!

정보로써 더욱 가치있는 HTML 태그

시각적인 자유정도가 떨어지는 p
이를 보조해줄 CSS!

html과 완전히 다른 문법이 들어올 곳.
어디서부터 어디까지 하나의 단락임을 보여줄 수 있음!
#의미에 맞는 태그를 사용하는 것이 더 중요하다..!
81.5% p
70.2% br

*html이 중요한 이유
응용으로 가기 위해 기초가 중요하다?!
기초 그 자체가 중요할 수 있다..!
우리가 배운 것 만으로도 할 수 있는 것들

지식인들과 일반인들과 쓰는 것에 대한 차이?

글씨를 키우고 굵게 표시했던 일반인
Title 2 정도를 부여한 지식인

source를 통해 차이를 확인..!

<h3></h3>태그상에 중요도가 나타남 : 지식인
글씨크기와 strong을 꾸며서 넣음 : 일반인

검색엔진이 이 두 가지에 대해 심판을 한다.
이럴때에 극단적으로 생각할 필요가 있음
(1억개의 웹사이트가 일반인 그리고 지식인의 방식으로
 작성했을 때 두 사람의 인생은 어떻게 바뀌게 될까?)

[coding] 이라고 검색
맨 앞에 나오는 지식인의 코딩
100페이지 너머에 나오는 일반인의 코딩
(= 사실상 존재하지 않는 것으로 취급)

<1>정보를 제공하는 것..!
이미지로 예쁘게 작성해놓아도
html에게 있어선 존재하지 않는 것으로 취급할 수 있음

<2>웹은 누구나 사용할 수 있는 공공재; accessibility
신체의 제한이 있더라도 정보의 제한이 없도록 해야하는 것
(청각 장애인:screen reader등을 이용해 사용)
이미지로 만들게 된다면 존재하지 않는 정보가 되는 것..

html에 대한 요소를 고려하며 만들어도 누군가에게 큰 도움이 된다.

비즈니스 + 휴머니즘적 측면에서도 중요한 기술..!

12.25~
*최후의 문법 속성 & img
Unsplash.com; 저작권의 부여받지 않고 사용할 수 있는 이미지들을 모아놓은 사이
<img width="100%" src="coding.jpg">
img 태그안에 들어가는 속성들..! 이 속성들은 바뀌어도 상관이 없다.

*부모자식과 목록
<parent>
  <child></child>
</parent>
무조건 적이지 않지만..
부모가 있는 곳에 자식이 있고
자식이 있는 곳에 특정 부모가 있는 태그들도 있음..!

html 제작자들은 의미에 맞게 (웹페이지가 더 가치있도록 만든) 태그들이 있다..!
목록: <li>st
list에 경계를 짓기 위한 부모태그
ul태그(반드시 자식을 가지는 태그)

극단적으로 생각할 필요가 있다.
행복한 상태에서 코딩하지는 않는다.

첫째줄을 지워버리게 되면?
리스트를 일일이 수정해야함.
1억개라면 무려 115일이 걸림..

알아서 넘버링해주는 태그 ol
앞에 무언가를 추가하는 경우에도 편리하게 사용가능

Unordered List
Ordered List

테이블의 경우 삼대가 같이 다님
<table>
  <tr>
    <td></td>
  </tr>
</table>

*문서의 구조와 슈퍼스타들
정보가 많아짐..> 정보를 정리정돈하는 구조를 만드는 방법

title..> 없다고 되게 손해보게 되게 크게 손해 보게 될 것

char(character) 문자
set 규칙

밑에 있는 코드들 >> 본문
위에 있는 코드들 >> 본문을 설명하는 것

title > 본문의 제목
meta charset="utf-8" > 본문이 utf-8로 저장되어 있는 것.

<head> 본문을 설명</head>
<body> 본문 </body>
사람사이의 약속..!
고위층

이 고위층들을 감싸는 태그
<!doctype html> <-- 관용적으로 씀
<html>
고위층 태그들
</html>

전세계에 모든 웹페이지들이 가지고 있는 태그..!
옛날엔 보이지 않았던 것들
들리지 않았던 것들이 보이기 시작..!

HTML 구조를 작성하는 방법을 알게 됨..!

*HTML 태그의 제왕
태그 > 왕국
이 왕국의 제왕?!

이 태그가 없다면 검색엔진이 존재하지 않았을 것..!
도시의 길과 같은 인체의 혈관과 같은 것

백 번도 넘게 사용하는 태그..!
HTML에서 HyperText를 의미

<a> Anchor(닻과 같은 역할) >>> 링크..!

html specification 검색 >> 명세서라는 뜻
WCDC의 멤버들이 미래의 웹의 기술을 결정하는 자리

Hypertext REFerence

딴 생각하지 말아야지.. 라는 딴 생각을 하던 아이
그렇게 공부를 싫어하는 아이로 스스로 낙인 << 성적표
WEB을 위해 인터넷을 도입하며
링크를 통해 세계를 탐험하기 시작

링크를 따라 여행하는 웹서핑 >> 진정한 공부
공부를 좋아하는 사람이라는 것을 알게 됨
링크를 통해 정보를 탐험하고 문제를 해결하며
공부하고 있다면 공부를 좋아하고 있는 것..!

*웹사이트 완성
책 = 링크와 링크로 연결하는 것..!
링크 = 본드, 실!

웹페이지들을 엮어서 하나의 웹사이트들을 만들어보자..!

WEB > index.html

1. HTML > 1.html
2. CSS  > 2.html
3. JavaScript > 3.html

*원시웹(210103-17:31)
두 개의 산
1. 웹페이지를 만드는 것. 코드란 무엇인가?
2. 내가 만든 웹페이지를 누구나 가져갈 수 있도록 하는 것

웹의 역사
2017-27년
2021-31년?!

지도 없이 여행하는 기분..?!
웹이 세상에 처음으로 가면 웹의 본질이 있으리니.
인터넷과 웹이 어떻게 세상에 나오게 되었는가?

소비자가 아닌 생산자로써 바라보아야..
인터넷 vs WEB
Diffrence!

도로 > 자동차
OS > .exe

Internet 안에 Web이 존재 + FTP, email .. etc

1960년 ~ 1990년
인터넷의 등장
30년 후 web이 등장

1960: Nuke!; 핵에 대한 공포감이 컸다.
통신 시스템에 큰 문제가 생김(중앙집중형)
수많은 통신장치들이 분산되어 전화국과 같은 역할을 함

인터넷
군대, 대학, 연구소와 같은 거대 기관들이 사용하는 시스템
웹!의 출현으로 새로운 길을 걷게 된다.

의외의 공간 swiss에서 발생한 웹?!
스위스 - 제네바
물리학 연구소에 있던 가속입자장치
CERN(연구소) - LHC(가입자가속기)
둘레가 무려 27km!

입자를 충돌시키면 더 작은 무엇인가가 나올 것이다!
힉스 입자

유럽입자물리연구소
힉스가 존재하더라..!

그 해에 노벨 물리학상을 받은..
단지 호기심으로 엄청난 것을 발견한..

127명의 12000여명의 천재적인 엔지니어가 모여 만듬

1980~1990년
현재와 마찬가지로 정보의 바다를 헤엄치는 것
비정규직으로 CERN에 취직한 팀버너스

Enquire(무엇이든 물어보세요 같은 책의 제목을 땀)를 만들었으나 지금은 존재하지 않는다고..
연구소를 들어갔다 나갔다 하며 웹의 전신이 되는 프로그램을 만들어나갔다.
1990년 연구소에 인터넷이 들어선 것..!

1990.10 웹페이지 편집기 개발
1990.11 World wide web 개발
1990.12 첫 아이 출산 예정일에 웹서버를 만들어 info.cern.ch
home of the first website

primitive web:원시 웹
인류 역사를 획기적으로 바꾸어놓은 인터넷은 무엇일까..?

*인터넷을 여는 열쇠: 서버와 클라이언트(210103_20:58)

두 대의 컴퓨터
웹 브라우저가 깔린 컴퓨터 ->정보 요청:Request  /Client<요청자;고객>
웹 서버가 깔려있는 컴퓨터 ->정보 응답:Response /Server<응답자;제공자>

자본주의 사회에 맞는 관계로..!

게임 클라이언트
게임 서버

채팅 클라이언트
채팅 서버

대부분은 알고 있을 웹브라우저, 아직은 낯선 웹서버
논리적이고 추상적인 웹브라우저를 물질처럼 접하게 된 우리
웹서버도 웹브라우저처럼 다운받아서 쓸 수 있다는 것..!

폰노이만(수학천재) < 어떻게 수학을 잘하세요?
"수학은 이해하는 게 아니라 익숙해지는 거라네 (호호)"

익숙해지기 위한 수많은 방법 중 이해일 뿐..!
웹브라우저 마스터인 우리들
이제 웹 서버를 만들어보자..!

1. 자신의 컴퓨터에 직접 깔아서 해보기(Web Server)<HARD, 여러가지를 배울 수 있음>
2. 이를 대행하는 업체에게 맡기기(Web Hosting)<EASY, 인터넷 동작 원리가 많이 감춰져 있음>

시간이 없다면 웹 호스팅만
호스팅 먼저 해보구 웹서버를 구축해보기

*웹호스팅(github pages)(210103_21:09)
냉장고처럼 계속켜져있는 채로 집 밖에서 여러가지 조치를 해서 해야하는 것.. 웹서버는 조금 쉽진 않다.
이를 쉽게 해주는 호스트를 빌려주는 회사 web hosting

FREE & Famous github
홈페이지를 운영할 수 있는 웹서버를 제공해준다.

repository : 저장공간
우리가 만든 것들을 저장하는 곳;구글드라이브, 드롭박스 같은 친구 _ 프로그래머 전용
